!function(){"use strict";class e{constructor(e){this.text=e,this.pinned=!1}pin(e){e.pinned=!0}}const s=new class{constructor(e,s){this.tasks=[],this.allTasksElem=document.querySelector(e),this.pinnedTasksElem=document.querySelector(s)}add(s){if(""===s.trim())return void this.renderMessage(".input__message","You need to define task name");this.hideMessage(".input__message"),this.hideMessage(".tasks__message");const t=new e(s);this.tasks.push(t),this.clearTasksElem(this.allTasksElem);const i=this.tasks.filter((e=>!1===e.pinned));this.renderTasks(i)}renderTask(e){const s=document.createElement("div");s.className="task",s.innerHTML=`<div class = "task__title">\n                            ${e.text}\n                        </div>\n        <a href = "#" class = "task__pin"></a>\n        <a href = "#" class = "task__unpin hidden">V</a>`,e.pinned&&(s.querySelector(".task__pin").classList.toggle("hidden"),s.querySelector(".task__unpin").classList.toggle("hidden"));const t=this.onClickCb.bind(this,e,!0),i=this.onClickCb.bind(this,e,!1);s.querySelector(".task__pin").addEventListener("click",t),s.querySelector(".task__unpin").addEventListener("click",i),e.pinned?this.pinnedTasksElem.insertBefore(s,null):this.allTasksElem.insertBefore(s,null)}onClickCb(e,s){let t;e.pinned=s,this.clearTasksElem(this.allTasksElem),this.clearTasksElem(this.pinnedTasksElem);const i=document.querySelector(".input");!1===s?this.filterHandler(i.value):(t=this.tasks.filter((e=>!1===e.pinned)),this.renderTasks(t)),t=this.tasks.filter((e=>!0===e.pinned)),0===t.length?this.renderMessage(".pinned__message","No pinned tasks"):(this.hideMessage(".pinned__message"),this.renderTasks(t))}renderTasks(e){e.forEach((e=>{this.renderTask(e)}))}clearTasksElem(e){e.querySelectorAll(".task").forEach((e=>{e.remove()}))}filterHandler(e){const s=this.tasks.filter((s=>!1===s.pinned&&s.text.toLowerCase().includes(e.toLowerCase())));0===s.length?this.renderMessage(".tasks__message","No tasks found"):this.hideMessage(".tasks__message"),this.clearTasksElem(this.allTasksElem),this.renderTasks(s)}renderMessage(e,s){document.querySelector(e).textContent=s}hideMessage(e){document.querySelector(e).textContent=""}}(".div__all-tasks",".div__pinned-tasks");new class{constructor(e,s){this.taskList=s,this.form=document.querySelector("form"),this.form.addEventListener("submit",(e=>{e.preventDefault()})),this.input=document.querySelector(e),this.input.addEventListener("keyup",(e=>{"Enter"===e.key&&(s.add(this.input.value),this.input.value="")})),this.onFilter=this.onFilter.bind(this),this.input.addEventListener("input",this.onFilter)}onFilter(e){e.preventDefault(),this.timeout&&clearTimeout(this.timeout);const s=this.input.value;this.timeout=setTimeout((()=>this.taskList.filterHandler(s)),300)}}(".input",s)}();